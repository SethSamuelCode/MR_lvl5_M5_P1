services:

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo_storage:/data/db
    networks:
      - MR_lvl5_M5_P1_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    ports:
      - 27017:27017

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  #     ME_CONFIG_BASICAUTH: false
  #     ME_CONFIG_MONGODB_ENABLE_ADMIN: true
  #   networks:
  #     - MR_lvl5_M5_P1_network

  backend:
    build:
      context: ../../getFromDatabaseAPI/node
      dockerfile: backend.dockerfile
    restart: on-failure:5
    ports:
      - 4000:4000
    env_file:
      - ./.env
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - MR_lvl5_M5_P1_network
      

volumes:
  mongo_storage:

networks:
  MR_lvl5_M5_P1_network: